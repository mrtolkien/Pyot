(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{444:function(t,e,a){"use strict";a.r(e);var r=a(42),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("h3",{attrs:{id:"submodule-common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-common"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("common")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"loop-run-coro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loop-run-coro"}},[t._v("#")]),t._v(" "),a("code",[t._v("loop_run(coro)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Run the coroutine in the current event loop or a new one if "),a("code",[t._v("set_event_loop()")]),t._v(" has not yet been called.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"thread-run-func"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thread-run-func"}},[t._v("#")]),t._v(" "),a("code",[t._v("thread_run(func)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Run a blocking function in a thread.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"case-combinations-string-str-set-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-combinations-string-str-set-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("case_combinations(string: str) -> Set[str]")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Return all posible case combinations of a string in set.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"case-insensitive-dict-dic-dict-dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-insensitive-dict-dic-dict-dict"}},[t._v("#")]),t._v(" "),a("code",[t._v("case_insensitive_dict(dic: Dict) -> Dict:")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Return a dict with all possible case combinations for each key.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"snakecase-camel-str-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snakecase-camel-str-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("snakecase(camel_str: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert string to python snakecase.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"camelcase-snake-str-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#camelcase-snake-str-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("camelcase(snake_str: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert string to json camelcase.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"import-class-path-str-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-class-path-str-any"}},[t._v("#")]),t._v(" "),a("code",[t._v("import_class(path: str) -> Any")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Return the class given its python path")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"fast-copy-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fast-copy-obj"}},[t._v("#")]),t._v(" "),a("code",[t._v("fast_copy(obj)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("30x faster copy than "),a("code",[t._v("copy.deepcopy")]),t._v(", not all objects can be copied.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"bytify-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bytify-obj"}},[t._v("#")]),t._v(" "),a("code",[t._v("bytify(obj)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert a python object to byte string.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"pytify-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pytify-obj"}},[t._v("#")]),t._v(" "),a("code",[t._v("pytify(obj)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert a byte string to python object.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"shuffle-list-li-list-any-param-str-size-int-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shuffle-list-li-list-any-param-str-size-int-10"}},[t._v("#")]),t._v(" "),a("code",[t._v("shuffle_list(li: List[Any], param: str, size: int = 10)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Shuffle a list by a specified param and chunk size.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("param")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": param to shuffle based on, either the an attribute or key.")],1),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": size of the returned chunks, e.g. "),a("code",[t._v("size=10")]),t._v(" will return a new list with items of the same "),a("code",[t._v("param")]),t._v(" every 10 items. Typically used for mixing pyot objects regions and platforms to better regulate rate limits.")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"dict-key-value-swap-dic-dict-dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dict-key-value-swap-dic-dict-dict"}},[t._v("#")]),t._v(" "),a("code",[t._v("dict_key_value_swap(dic: Dict) -> Dict")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Swap key and value of a dictionary, this will not work for duplicated values.")])]),t._v(" "),a("h3",{attrs:{id:"submodule-cdragon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-cdragon"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("cdragon")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"start-k-string-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-k-string-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("start_k(string: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Removes k if string start with k.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": String to remove k prefix.")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"cdragon-url-link-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdragon-url-link-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("cdragon_url(link: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Return the CDragon url for the given game asset url.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("link")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Original returned url")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"tft-url-link-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tft-url-link-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("tft_url(link: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Return the CDragon url for the given tft asset url.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("link")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Original returned url")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"cdragon-sanitize-string-str-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdragon-sanitize-string-str-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("cdragon_sanitize(string: str) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Sanitize CDragon descriptions.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Dirty string to sanitize")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"tft-item-sanitize-string-str-obj-dict-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tft-item-sanitize-string-str-obj-dict-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("tft_item_sanitize(string: str, obj: dict) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Sanitize CDragon tft item descriptions.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Dirty string to sanitize")],1),t._v(" "),a("li",[a("code",[t._v("obj")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Dict containing tft item variables.")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"tft-champ-sanitize-string-str-list-of-obj-list-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tft-champ-sanitize-string-str-list-of-obj-list-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("tft_champ_sanitize(string: str, list_of_obj: list) -> str")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Sanitize CDragon tft champion descriptions.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": Dirty string to sanitize")],1),t._v(" "),a("li",[a("code",[t._v("obj")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(": List of dict containing tft champion variables.")],1)])]),t._v(" "),a("h3",{attrs:{id:"submodule-champion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-champion"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("champion")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("INFO")]),t._v(" "),a("p",[t._v("Responses (All the champions) will be cached for 3 hours")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-id-by-key-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-id-by-key-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_id_by_key(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion key to id")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-id-by-name-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-id-by-name-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_id_by_name(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion name to id")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-key-by-id-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-key-by-id-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_key_by_id(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion id to key")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-key-by-name-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-key-by-name-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_key_by_name(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion name to key")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-name-by-id-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-name-by-id-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_name_by_id(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion id to name")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"champion-name-by-key-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#champion-name-by-key-value"}},[t._v("#")]),t._v(" "),a("code",[t._v("champion_name_by_key(value)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Convert champion key to name")])]),t._v(" "),a("h3",{attrs:{id:"submodule-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-time"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("time")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"timeit-func-or-coro-iters-int-1-concurrent-bool-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeit-func-or-coro-iters-int-1-concurrent-bool-true"}},[t._v("#")]),t._v(" "),a("code",[t._v("timeit(func_or_coro, iters: int = 1 concurrent: bool = True)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Measures the running time of a function or coroutine. Functions/Coroutines with arguments should be passed using "),a("code",[t._v("functools.partial")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("iters")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(" may be passed to specify the amount of repeat executions.")],1),t._v(" "),a("li",[a("code",[t._v("concurrent")]),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(" to signify concurrent running of coroutines.")],1)])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"atimeit-coro-iters-int-1-concurrent-bool-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#atimeit-coro-iters-int-1-concurrent-bool-true"}},[t._v("#")]),t._v(" "),a("code",[t._v("atimeit(coro, iters: int = 1, concurrent: bool = True)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"awaitable",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Awaitable, measures the running time of a coroutine. Coroutines with arguments should be passed using "),a("code",[t._v("functools.partial")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("iters")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(" may be passed to specify the amount of repeat executions.")],1),t._v(" "),a("li",[a("code",[t._v("concurrent")]),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}}),t._v(" to signify concurrent running of coroutines.")],1)])]),t._v(" "),a("h3",{attrs:{id:"submodule-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-objects"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("objects")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"ptr-cache-expiration-60-60-3-max-entries-2000"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ptr-cache-expiration-60-60-3-max-entries-2000"}},[t._v("#")]),t._v(" "),a("code",[t._v("ptr_cache(expiration=60*60*3, max_entries=2000)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Create an PtrCache and return it. Takes the same params as the object class constructor.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"frozen-generator-li"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frozen-generator-li"}},[t._v("#")]),t._v(" "),a("code",[t._v("frozen_generator(li)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Create a FrozenGenerator and return it. Takes the same params as the object class constructor.")])]),t._v(" "),a("h3",{attrs:{id:"submodule-dicts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-dicts"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("dicts")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"multi-defaultdict-default-callable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-defaultdict-default-callable"}},[t._v("#")]),t._v(" "),a("code",[t._v("multi_defaultdict(default: Callable)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Create a MultiDefaultDict and return it. Takes the same params as the object class constructor.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"redis-defaultdict-redi-redis-redis-default-callable-prefix-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-defaultdict-redi-redis-redis-default-callable-prefix-str"}},[t._v("#")]),t._v(" "),a("code",[t._v('redis_defaultdict(redi: redis.Redis, default: Callable, prefix: str = "")')]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Create a RedisDefaultDict and return it. Takes the same params as the object class constructor.")])]),t._v(" "),a("h3",{attrs:{id:"submodule-lor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submodule-lor"}},[t._v("#")]),t._v(" Submodule: "),a("code",[t._v("lor")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"batch-to-ccac-batch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batch-to-ccac-batch"}},[t._v("#")]),t._v(" "),a("code",[t._v("batch_to_ccac(batch)")]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Converts a Batch object to CardCodeAndCount object.")])]),t._v(" "),a("blockquote",[a("h2",{attrs:{id:"ccac-to-batch-ccac-cardcodeandcount-locale-str-none-batch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ccac-to-batch-ccac-cardcodeandcount-locale-str-none-batch"}},[t._v("#")]),t._v(" "),a("code",[t._v('ccac_to_batch(ccac: CardCodeAndCount, locale: str = None) -> "Batch"')]),t._v(" "),a("Badge",{attrs:{text:"function",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Converts a CardCodeAndCount object to Batch object. "),a("code",[t._v("locale")]),t._v(" is set if passed.")])])])}),[],!1,null,null,null);e.default=i.exports}}]);