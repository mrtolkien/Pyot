(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{429:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"stores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stores"}},[t._v("#")]),t._v(" Stores")]),t._v(" "),s("p",[t._v("Specify the backend of the store on the pipeline.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BACKEND"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyot.stores.RiotAPI"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The arguments keys passed to Pyot Settings Pipeline can be in ALL CAPS to maintain better code redability. It is automatically lowercased on activation anyways.")])]),t._v(" "),s("h1",{attrs:{id:"legend"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legend"}},[t._v("#")]),t._v(" Legend")]),t._v(" "),s("p",[t._v("-"),s("Badge",{attrs:{text:"Pyot Cache",vertical:"middle"}}),t._v(": Identifies the store of type Cache.")],1),t._v(" "),s("p",[t._v("-"),s("Badge",{attrs:{text:"Pyot Service",vertical:"middle"}}),t._v(": Identifies the store of type Service.")],1),t._v(" "),s("p",[t._v("-"),s("Badge",{attrs:{text:"Sharding",type:"error",vertical:"middle"}}),t._v(": This store supports multiple instances (hence sharding by separating multiple Cache to handle different type of objects) in the Pipeline.")],1),t._v(" "),s("p",[t._v("-"),s("Badge",{attrs:{text:"Model",type:"warning",vertical:"middle"}}),t._v(": This is a Pyot model.")],1),t._v(" "),s("p",[t._v("-"),s("Badge",{attrs:{text:"<model-name>",type:"error",vertical:"middle"}}),t._v(": The name of the model supported if not all.")],1)])}),[],!1,null,null,null);e.default=n.exports}}]);