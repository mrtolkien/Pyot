(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{401:function(t,e,a){"use strict";a.r(e);var r=a(42),d=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"card"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#card"}},[t._v("#")]),t._v(" Card")]),t._v(" "),a("p",[t._v("Model: Legends of Runeterra")]),t._v(" "),a("h2",{attrs:{id:"cards"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cards"}},[t._v("#")]),t._v(" "),a("code",[t._v("Cards")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"Iterable",type:"warning",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("set: int = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("locale: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"ddragon_lor_set_data": ["set", "locale"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cards: List[Card]")]),t._v(" "),a("Badge",{attrs:{text:"Iterator",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"card-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#card-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("Card")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("code: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("locale: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"ddragon_lor_set_data": ["set", "locale"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("associated_card_codes: List[str]")])]),t._v(" "),a("p",[a("code",[t._v("assets: List[CardAssetData]")])]),t._v(" "),a("p",[a("code",[t._v("region: str")])]),t._v(" "),a("p",[a("code",[t._v("region_ref: str")])]),t._v(" "),a("p",[a("code",[t._v("attack: int")])]),t._v(" "),a("p",[a("code",[t._v("cost: int")])]),t._v(" "),a("p",[a("code",[t._v("health: int")])]),t._v(" "),a("p",[a("code",[t._v("description: str")])]),t._v(" "),a("p",[a("code",[t._v("description_raw: str")])]),t._v(" "),a("p",[a("code",[t._v("levelup_description: str")])]),t._v(" "),a("p",[a("code",[t._v("levelup_description_raw: str")])]),t._v(" "),a("p",[a("code",[t._v("flavor_text: str")])]),t._v(" "),a("p",[a("code",[t._v("artist_name: str")])]),t._v(" "),a("p",[a("code",[t._v("name: str")])]),t._v(" "),a("p",[a("code",[t._v("code: str")])]),t._v(" "),a("p",[a("code",[t._v("keywords: List[str]")])]),t._v(" "),a("p",[a("code",[t._v("keyword_refs: List[str]")])]),t._v(" "),a("p",[a("code",[t._v("spell_speed: str")])]),t._v(" "),a("p",[a("code",[t._v("spell_speed_ref: str")])]),t._v(" "),a("p",[a("code",[t._v("rarity: str")])]),t._v(" "),a("p",[a("code",[t._v("rarity_ref: str")])]),t._v(" "),a("p",[a("code",[t._v("subtype: str")])]),t._v(" "),a("p",[a("code",[t._v("subtypes: List[str]")])]),t._v(" "),a("p",[a("code",[t._v("supertype: str")])]),t._v(" "),a("p",[a("code",[t._v("type: str")])]),t._v(" "),a("p",[a("code",[t._v("collectible: bool")])]),t._v(" "),a("p",[a("code",[t._v("set: int")])]),t._v(" "),a("p",[a("code",[t._v("faction: str")])]),t._v(" "),a("p",[a("code",[t._v("number: int")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('associated_cards -> List["Card"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"cardassetdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cardassetdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("CardAssetData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("game_absolute_path: str")])]),t._v(" "),a("p",[a("code",[t._v("full_absolute_path: str")])])]),t._v(" "),a("h2",{attrs:{id:"deck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deck"}},[t._v("#")]),t._v(" "),a("code",[t._v("Deck")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Container",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"Iterable",type:"warning",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("batches: Union[List[str], List[Batch]] = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("code: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("locale: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("batches: List[Batch]")]),t._v(" "),a("Badge",{attrs:{text:"Iterator",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("locale: str")])]),t._v(" "),a("p",[a("code",[t._v("code: str")])]),t._v(" "),a("p",[a("code",[t._v("raw: List[str]")])])]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"append-batch-union-batch-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#append-batch-union-batch-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("append(batch: Union[Batch, str])")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Appends a Batch object or CardCodeAndCount string to the Deck.")]),t._v(" "),a("h4",{attrs:{id:"pop-ind-int-1-batch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop-ind-int-1-batch"}},[t._v("#")]),t._v(" "),a("code",[t._v("pop(ind: int = -1) -> Batch")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Remove and return a Batch object by index.")]),t._v(" "),a("h4",{attrs:{id:"pull-card-code-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-card-code-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("pull(card_code: str)")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Remove and return a Batch object by code.")]),t._v(" "),a("h4",{attrs:{id:"encode-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encode-str"}},[t._v("#")]),t._v(" "),a("code",[t._v("encode() -> str")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Encode the content in "),a("code",[t._v("self.batches")]),t._v(", set the code and return it.")]),t._v(" "),a("h4",{attrs:{id:"decode-deck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decode-deck"}},[t._v("#")]),t._v(" "),a("code",[t._v('decode() -> "Deck"')]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Decode the string in "),a("code",[t._v("self.code")]),t._v(", rebuild the batches and return self.")])]),t._v(" "),a("h2",{attrs:{id:"batch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batch"}},[t._v("#")]),t._v(" "),a("code",[t._v("Batch")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Container",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("code: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("count: int = 1")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("raw: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("locale: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("code: str")])]),t._v(" "),a("p",[a("code",[t._v("count: int")])]),t._v(" "),a("p",[a("code",[t._v("locale: str")])]),t._v(" "),a("p",[a("code",[t._v("faction: str")])]),t._v(" "),a("p",[a("code",[t._v("set: int")])]),t._v(" "),a("p",[a("code",[t._v("number: int")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("card -> Card")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"add-amount-int-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-amount-int-1"}},[t._v("#")]),t._v(" "),a("code",[t._v("add(amount: int = 1)")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Add a copy to the batch, "),a("code",[t._v("amount")]),t._v(" may be passed to add more than 1 copy.")]),t._v(" "),a("h4",{attrs:{id:"remove-amount-int-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-amount-int-1"}},[t._v("#")]),t._v(" "),a("code",[t._v("remove(amount: int = 1)")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Remove a copy from the batch, "),a("code",[t._v("amount")]),t._v(" may be passed to remove more than 1 copy.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("INFO")]),t._v(" "),a("p",[t._v("Deck encoding and decoding is done using the third party library "),a("code",[t._v("lor-deckcodes")]),t._v(", python implementation of the official C# library, details in "),a("a",{attrs:{href:"https://github.com/Rafalonso/LoRDeckCodesPython",target:"_blank",rel:"noopener noreferrer"}},[t._v("repository"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("There are utils methods on the "),a("code",[t._v("pyot.utils")]),t._v(" module that can help you transform between "),a("code",[t._v("lor-deckcodes")]),t._v(" type objects and "),a("code",[t._v("PyotContainer")]),t._v(" type objects.")])])])}),[],!1,null,null,null);e.default=d.exports}}]);