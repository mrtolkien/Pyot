(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{373:function(e,t,a){"use strict";a.r(t);var o=a(42),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"version-2-→-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version-2-→-3"}},[e._v("#")]),e._v(" Version 2 → 3")]),e._v(" "),a("p",[e._v("This guide "),a("strong",[e._v("covers only backward imcompatible changes")]),e._v(" and the necessary steps for migrating Pyot 2 to Pyot 3. For Pyot 3 release notes please head to releases.")]),e._v(" "),a("h2",{attrs:{id:"major-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#major-changes"}},[e._v("#")]),e._v(" Major changes")]),e._v(" "),a("p",[e._v("List of major changes in Pyot 3.")]),e._v(" "),a("h3",{attrs:{id:"lol-matchtimeline-has-been-removed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-matchtimeline-has-been-removed"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.MatchTimeline")]),e._v(" has been removed.")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("lol.Match")]),e._v(" constructor will have an extra param "),a("code",[e._v("include_timeline")]),e._v(" that calls "),a("code",[e._v("lol.Timeline.get")]),e._v(" and inject the events and frames to each of the participants.")]),e._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[e._v("match "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" lol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("match_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" include_timeline"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("h3",{attrs:{id:"lol-timeline-reworked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-timeline-reworked"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.Timeline")]),e._v(" reworked.")]),e._v(" "),a("blockquote",[a("p",[e._v("Core "),a("code",[e._v("lol.Timeline")]),e._v(" will not longer transform the data into "),a("code",[e._v("{frames: [[],], events: []}")]),e._v(" format, it now instead uses a closer formatting to the one returned by the Riot API: "),a("code",[e._v("{frames: [{participantFrames: [], events: [], interval: x}],}")]),e._v(" (Transformation of the 1~10 index participantFrames into a list remains).")])]),e._v(" "),a("h3",{attrs:{id:"ptr-cache-param-of-get-method-of-pyotcore-objects-removed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ptr-cache-param-of-get-method-of-pyotcore-objects-removed"}},[e._v("#")]),e._v(" "),a("code",[e._v("ptr_cache")]),e._v(" param of "),a("code",[e._v("get")]),e._v(" method of "),a("code",[e._v("PyotCore")]),e._v(" objects removed.")]),e._v(" "),a("blockquote",[a("p",[e._v("Removed due to low benefit and the need of extra handling on filtered result. The use leaves 2 problems that is not solved: 1) Unnecessary instantiation of classes; 2) Generation of pipeline token does not account filtered params. Please use "),a("code",[e._v("PtrCache")]),e._v(" in its standard way and its new "),a("code",[e._v("lazy")]),e._v(" param for delaying instantiation of classes.")])]),e._v(" "),a("h3",{attrs:{id:"keep-raw-param-of-get-method-of-pyotcore-objects-replaced"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-raw-param-of-get-method-of-pyotcore-objects-replaced"}},[e._v("#")]),e._v(" "),a("code",[e._v("keep_raw")]),e._v(" param of "),a("code",[e._v("get")]),e._v(" method of "),a("code",[e._v("PyotCore")]),e._v(" objects replaced.")]),e._v(" "),a("blockquote",[a("p",[e._v("Since Pyot 3, raw response is always saved, the transformer that mutates the dict will do "),a("strong",[e._v("smart copying")]),e._v(" achieve non-destructive mutations, however slight differences might exist compared to original response, to save the actual original response please set the new "),a("code",[e._v("deepcopy")]),e._v(" param to "),a("code",[e._v("True")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"json-method-of-pyotcore-objects-removed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-method-of-pyotcore-objects-removed"}},[e._v("#")]),e._v(" "),a("code",[e._v("json")]),e._v(" method of "),a("code",[e._v("PyotCore")]),e._v(" objects removed.")]),e._v(" "),a("blockquote",[a("p",[e._v("Since the new method "),a("code",[e._v("raw()")]),e._v(" is now always accessible, this method feels out, developer should json encode the data they choose.")])]),e._v(" "),a("h3",{attrs:{id:"dict-method-of-pyotcore-objects-reworked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dict-method-of-pyotcore-objects-reworked"}},[e._v("#")]),e._v(" "),a("code",[e._v("dict")]),e._v(" method of "),a("code",[e._v("PyotCore")]),e._v(" objects reworked.")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("pyotify")]),e._v(" param has renamed to "),a("code",[e._v("recursive")]),e._v(". Two new optional params are addded.")])]),e._v(" "),a("h3",{attrs:{id:"static-objects-absolute-urls-are-now-lazy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-objects-absolute-urls-are-now-lazy"}},[e._v("#")]),e._v(" Static objects absolute urls are now lazy.")]),e._v(" "),a("blockquote",[a("p",[e._v("All urls of CDragon objects were already modified, this adds extra serialization when it is not needed. They are now migrated to "),a("code",[e._v("lazy_property")]),e._v(" in a syntax of "),a("code",[e._v("*_abspath")]),e._v(", object "),a("code",[e._v("dict")]),e._v(" method will not return these properties by default, to return it, pass "),a("code",[e._v("lazy_props=True")]),e._v(" param to "),a("code",[e._v("dict()")]),e._v(" method.")])]),e._v(" "),a("h3",{attrs:{id:"pyot-queue-will-no-longer-handle-non-pyot-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pyot-queue-will-no-longer-handle-non-pyot-exceptions"}},[e._v("#")]),e._v(" Pyot Queue will NO longer handle non-Pyot exceptions.")]),e._v(" "),a("blockquote",[a("p",[e._v("The supressing was originally designed to avoid log overload, but turned out to brutantly affect the debug process. Shrinking the fench down to Pyot Specific exceptions. Note: This will only let the python interpreter raise the exception and log the traceback, the Queue WILL NOT STOP running.")])]),e._v(" "),a("h2",{attrs:{id:"minor-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minor-changes"}},[e._v("#")]),e._v(" Minor changes")]),e._v(" "),a("p",[e._v("List of minor changes in Pyot 3.")]),e._v(" "),a("h3",{attrs:{id:"match-object-dict-will-no-longer-return-blue-team-nor-red-team"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-object-dict-will-no-longer-return-blue-team-nor-red-team"}},[e._v("#")]),e._v(" "),a("code",[e._v("Match")]),e._v(" object dict will no longer return "),a("code",[e._v("blue_team")]),e._v(" nor "),a("code",[e._v("red_team")]),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("This adds extra repeated serialization and outbound data transfer, migrated to property and thus, "),a("code",[e._v("dict()")]),e._v(" will not return it.")])]),e._v(" "),a("h3",{attrs:{id:"lol-match-matchteamdata-team-id-renamed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-match-matchteamdata-team-id-renamed"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.match.MatchTeamData.team_id")]),e._v(" renamed.")]),e._v(" "),a("blockquote",[a("p",[e._v("Attribute "),a("code",[e._v("team_id")]),e._v(" from "),a("code",[e._v("lol.match.MatchTeamData")]),e._v(" (Core Parent: "),a("code",[e._v("lol.Match")]),e._v(") has been renamed to "),a("code",[e._v("id")])])]),e._v(" "),a("h3",{attrs:{id:"lol-match-matcheventdata-timestamp-no-longer-returns-timedelta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-match-matcheventdata-timestamp-no-longer-returns-timedelta"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.match.MatchEventData.timestamp")]),e._v(" no longer returns timedelta.")]),e._v(" "),a("blockquote",[a("p",[e._v("This object is serialized by mass, old version retuns timedelta by modifying "),a("code",[e._v("__getattribute__")]),e._v(" dunder method which adds extra overhead and its one of the cause of slow serialization, a new property "),a("code",[e._v("time")]),e._v(" will return what "),a("code",[e._v("timestamp")]),e._v(" use to return, please use that instead.")])]),e._v(" "),a("h3",{attrs:{id:"lol-match-matchparticipantstatdata-rune-style-renamed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-match-matchparticipantstatdata-rune-style-renamed"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.match.MatchParticipantStatData.rune_style")]),e._v(" renamed.")]),e._v(" "),a("blockquote",[a("p",[e._v("A more suited attribute name is "),a("code",[e._v("rune_main_style")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"all-deltas-in-lol-match-matchparticipanttimelinedata-will-not-be-parsed-anymore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#all-deltas-in-lol-match-matchparticipanttimelinedata-will-not-be-parsed-anymore"}},[e._v("#")]),e._v(" All deltas in "),a("code",[e._v("lol.match.MatchParticipantTimelineData")]),e._v(" will not be parsed anymore.")]),e._v(" "),a("blockquote",[a("p",[e._v("All deltas returned is dependant of the "),a("code",[e._v("role")]),e._v(" and "),a("code",[e._v("lane")]),e._v(" returned by the Riot API, and we all know how "),a("s",[e._v("inaccurate")]),e._v(" massive is the spaghetti algorithm that Riot uses to calculate them. Makes no sense to spend CPU time to parse unreliable data. They are now returned as dict.")])]),e._v(" "),a("h3",{attrs:{id:"timeline-now-also-injects-events-related-to-victim-in-lol-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeline-now-also-injects-events-related-to-victim-in-lol-match"}},[e._v("#")]),e._v(" Timeline now also injects events related to victim in "),a("code",[e._v("lol.Match")]),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("Now also injects to participants timelines where the "),a("code",[e._v("victimId")]),e._v(" of the event matches. To avoid taking account of wrong data, always validate "),a("code",[e._v("killerId")]),e._v(" or "),a("code",[e._v("killer_id")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"lol-featuredgame-queue-renamed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lol-featuredgame-queue-renamed"}},[e._v("#")]),e._v(" "),a("code",[e._v("lol.FeaturedGame.queue")]),e._v(" renamed.")]),e._v(" "),a("blockquote",[a("p",[e._v("A more suited attribute name is "),a("code",[e._v("queue_id")]),e._v(". This also affects to the inherited object "),a("code",[e._v("lol.CurrentGame")])])]),e._v(" "),a("h3",{attrs:{id:"val-match-matchplayerkilldata-game-duration-and-val-match-matchplayerkilldata-round-duration-renamed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#val-match-matchplayerkilldata-game-duration-and-val-match-matchplayerkilldata-round-duration-renamed"}},[e._v("#")]),e._v(" "),a("code",[e._v("val.match.MatchPlayerKillData.game_duration")]),e._v(" and "),a("code",[e._v("val.match.MatchPlayerKillData.round_duration")]),e._v(" renamed.")]),e._v(" "),a("blockquote",[a("p",[e._v("A more suited attribute name is "),a("code",[e._v("game_time")]),e._v(".\nA more suited attribute name is "),a("code",[e._v("round_time")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"region-platform-locale-will-no-longer-be-lowercase-forever"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#region-platform-locale-will-no-longer-be-lowercase-forever"}},[e._v("#")]),e._v(" region, platform, locale will no longer be lowercase forever.")]),e._v(" "),a("blockquote",[a("p",[e._v("For scenario where you need to validate against a database in choices (e.g. Django's ORM "),a("code",[e._v("choices")]),e._v(" param), just "),a("code",[e._v(".lower()")]),e._v(" instead.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);