(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{390:function(t,e,a){"use strict";a.r(e);var _=a(42),i=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" Match")]),t._v(" "),a("p",[t._v("Model: League of Legends")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("OPTIMIZATIONS")]),t._v(" "),a("p",[t._v("When iterating through mass amount of matches, code and execution time might need optimizations, here is a guide: "),a("strong",[a("RouterLink",{attrs:{to:"/topics/slow.html"}},[t._v("How to optimize Pyot CPU time")]),t._v(".")],1)])]),t._v(" "),a("h2",{attrs:{id:"match-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("Match")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("id: int = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("tournament_code: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("include_timeline: bool = False")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("platform: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"match_v4_tournament_match": ["tournament_code", "id"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('"match_v4_match": ["id"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("id: int")])]),t._v(" "),a("p",[a("code",[t._v("type: str")])]),t._v(" "),a("p",[a("code",[t._v("mode: str")])]),t._v(" "),a("p",[a("code",[t._v("version: str")])]),t._v(" "),a("p",[a("code",[t._v("map_id: int")])]),t._v(" "),a("p",[a("code",[t._v("season_id: int")])]),t._v(" "),a("p",[a("code",[t._v("queue_id: int")])]),t._v(" "),a("p",[a("code",[t._v("creation_millis: int")])]),t._v(" "),a("p",[a("code",[t._v("duration_secs: int")])]),t._v(" "),a("p",[a("code",[t._v("creation: datetime")])]),t._v(" "),a("p",[a("code",[t._v("duration: timedelta")])]),t._v(" "),a("p",[a("code",[t._v("platform: str")])]),t._v(" "),a("p",[a("code",[t._v("teams: List[MatchTeamData]")])]),t._v(" "),a("p",[a("code",[t._v("participants -> List[MatchParticipantData]")]),t._v(" "),a("Badge",{attrs:{text:"property",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("blue_team -> MatchTeamData")]),t._v(" "),a("Badge",{attrs:{text:"property",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("red_team -> MatchTeamData")]),t._v(" "),a("Badge",{attrs:{text:"property",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('timeline -> "Timeline"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"roleml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roleml"}},[t._v("#")]),t._v(" "),a("code",[t._v("roleml()")]),t._v(" "),a("Badge",{attrs:{text:"extension",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Executes "),a("code",[t._v("roleml.predict()")]),t._v(" using raw match and raw timeline data, injects the returned position to "),a("code",[t._v("teams[].participants[].timeline.position")]),t._v(" attribute and return the original response. This extension requires timeline data to work.")]),t._v(" "),a("h4",{attrs:{id:"roleidentification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roleidentification"}},[t._v("#")]),t._v(" "),a("code",[t._v("roleidentification()")]),t._v(" "),a("Badge",{attrs:{text:"extension",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Executes "),a("code",[t._v("roleidentification.getroles()")]),t._v(" using raw match and the returned champion roles from "),a("code",[t._v("roleidentification.pull_data()")]),t._v(" (This data is rotated every 3 hours if task is long lived, missing keys from data will be handled aswell), injects the returned position to "),a("code",[t._v("teams[].participants[].timeline.position")]),t._v(" attribute and return the original response in a dict based on team ids.")])]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"raw-timeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raw-timeline"}},[t._v("#")]),t._v(" "),a("code",[t._v("raw_timeline()")]),t._v(" "),a("Badge",{attrs:{text:"method",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("Returns the saved raw timeline data, only if "),a("code",[t._v("include_timeline")]),t._v(" is True and "),a("code",[t._v("get()")]),t._v(" was called before.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("THIRD PARTY PACKAGES")]),t._v(" "),a("p",[t._v("For other third party packages (e.g. Solari) that receives raw data returned by the API, methods "),a("code",[t._v(".raw()")]),t._v(" and "),a("code",[t._v(".raw_timeline()")]),t._v(" may be used.")])]),t._v(" "),a("h2",{attrs:{id:"timeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeline"}},[t._v("#")]),t._v(" "),a("code",[t._v("Timeline")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("id: int = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("platform: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"match_v4_timeline": ["id"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("frames: List[MatchFrameMinuteData]")])]),t._v(" "),a("p",[a("code",[t._v("interval_millis: int")])]),t._v(" "),a("p",[a("code",[t._v("interval: timedelta")])])]),t._v(" "),a("h2",{attrs:{id:"matchtimeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchtimeline"}},[t._v("#")]),t._v(" "),a("s",[a("code",[t._v("MatchTimeline")])]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("DEPRECATED")]),t._v(" "),a("p",[t._v("This class has been removed since v3.0.0, "),a("code",[t._v("frames")]),t._v(" and "),a("code",[t._v("events")]),t._v(" data from participants timelines will be injected directly through "),a("code",[t._v("lol.Match")]),t._v(" by setting "),a("code",[t._v("include_timeline=True")]),t._v(" in constructor.")])])]),t._v(" "),a("h2",{attrs:{id:"matchhistory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchhistory"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchHistory")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"Iterable",type:"warning",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("account_id: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("platform: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("champion_ids: List[int] = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("queue_ids: List[int] = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("season_ids: List[int] = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("end_time: int = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("begin_time: int = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("end_index: int = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("begin_index: int = None")]),t._v(" "),a("Badge",{attrs:{text:"query",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"match_v4_matchlist": ["account_id"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("entries: List[MatchHistoryMatchData]")]),t._v(" "),a("Badge",{attrs:{text:"Iterator",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("start_index: int")])]),t._v(" "),a("p",[a("code",[t._v("end_index: int")])]),t._v(" "),a("p",[a("code",[t._v("total_games: int")])]),t._v(" "),a("p",[a("code",[t._v("account_id: str")])]),t._v(" "),a("p",[a("code",[t._v("matches: List[Match]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("match_timelines: List[Match]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("timelines: List[Timeline]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('summoner -> "Summoner"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("HELP")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("matches")]),t._v(" returns a list of instantiated "),a("code",[t._v("Match")]),t._v(" objects.")]),t._v(" "),a("li",[a("code",[t._v("match_timelines")]),t._v(" returns a list of instantiated "),a("code",[t._v("Match")]),t._v(" objects with "),a("code",[t._v("include_timeline=True")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("timelines")]),t._v(" returns a list of instantiated "),a("code",[t._v("Timeline")]),t._v(" objects.")])])]),t._v(" "),a("h2",{attrs:{id:"matches"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matches"}},[t._v("#")]),t._v(" "),a("code",[t._v("Matches")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Core",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"GET",vertical:"middle"}}),t._v(" "),a("Badge",{attrs:{text:"Iterable",type:"warning",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('"match_v4_tournament_matches": ["tournament_code"]')]),t._v(" "),a("Badge",{attrs:{text:"endpoint",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("tournament_code: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("platform: str = None")]),t._v(" "),a("Badge",{attrs:{text:"param",type:"warning",vertical:"middle"}})],1)]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ids: List[str]")]),t._v(" "),a("Badge",{attrs:{text:"Iterator",type:"warning",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("tournament_code: str")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("matches -> List[Match]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("match_timelines -> List[Match]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v("timelines -> List[Match]")]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchframeminutedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchframeminutedata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchFrameMinuteData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("participant_frames: List[MatchFrameData]")])]),t._v(" "),a("p",[a("code",[t._v("events: List[MatchEventData]")])]),t._v(" "),a("p",[a("code",[t._v("timestamp: int")])]),t._v(" "),a("p",[a("code",[t._v("time: timedelta")])])]),t._v(" "),a("h2",{attrs:{id:"matchhistorymatchdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchhistorymatchdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchHistoryMatchData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("platform: str")])]),t._v(" "),a("p",[a("code",[t._v("id: int")])]),t._v(" "),a("p",[a("code",[t._v("champion_id: int")])]),t._v(" "),a("p",[a("code",[t._v("queue_id: int")])]),t._v(" "),a("p",[a("code",[t._v("season_id: int")])]),t._v(" "),a("p",[a("code",[t._v("creation: datetime")])]),t._v(" "),a("p",[a("code",[t._v("role: str")])]),t._v(" "),a("p",[a("code",[t._v("lane: str")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('champion -> "Champion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_champion -> "MerakiChampion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('match -> "Match"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('match_timeline -> "MatchTimeline"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('timeline -> "Timeline"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchteamdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchteamdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchTeamData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("team_id: int")])]),t._v(" "),a("p",[a("code",[t._v("win: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_blood: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_tower: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_inhibitor: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_baron: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_dragon: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_rift_herald: bool")])]),t._v(" "),a("p",[a("code",[t._v("tower_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("inhibitor_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("baron_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("dragon_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("vilemaw_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("rift_herald_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("dominion_victory_score: int")])]),t._v(" "),a("p",[a("code",[t._v("bans: List[MatchBanData]")])]),t._v(" "),a("p",[a("code",[t._v("participants: List[MatchParticipantData]")])])]),t._v(" "),a("h2",{attrs:{id:"matchparticipantdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchparticipantdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchParticipantData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("id: int")])]),t._v(" "),a("p",[a("code",[t._v("team_id: int")])]),t._v(" "),a("p",[a("code",[t._v("champion_id: int")])]),t._v(" "),a("p",[a("code",[t._v("spell_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("stats: MatchParticipantStatData")])]),t._v(" "),a("p",[a("code",[t._v("timeline: MatchParticipantTimelineData")])]),t._v(" "),a("p",[a("code",[t._v("profile_icon_id: int")])]),t._v(" "),a("p",[a("code",[t._v("account_id: str")])]),t._v(" "),a("p",[a("code",[t._v("match_history_uri: str")])]),t._v(" "),a("p",[a("code",[t._v("current_account_id: str")])]),t._v(" "),a("p",[a("code",[t._v("current_platform: str")])]),t._v(" "),a("p",[a("code",[t._v("summoner_name: str")])]),t._v(" "),a("p",[a("code",[t._v("summoner_id: str")])]),t._v(" "),a("p",[a("code",[t._v("platform: str")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('champion -> "Champion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_champion -> "MerakiChampion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('spells -> List["Spell"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('account -> "Summoner"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('current_account -> "Summoner"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('summoner -> "Summoner"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('profile_icon -> "ProfileIcon"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchparticipantstatdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchparticipantstatdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchParticipantStatData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("participant_id: int")])]),t._v(" "),a("p",[a("code",[t._v("win: bool")])]),t._v(" "),a("p",[a("code",[t._v("dominion_scores: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("spell_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("item_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("rune_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("stat_rune_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("rune_vars: List[List[int]]")])]),t._v(" "),a("p",[a("code",[t._v("rune_main_style: int")])]),t._v(" "),a("p",[a("code",[t._v("rune_sub_style: int")])]),t._v(" "),a("p",[a("code",[t._v("kills: int")])]),t._v(" "),a("p",[a("code",[t._v("deaths: int")])]),t._v(" "),a("p",[a("code",[t._v("assists: int")])]),t._v(" "),a("p",[a("code",[t._v("largest_killing_spree: int")])]),t._v(" "),a("p",[a("code",[t._v("largest_multi_kill: int")])]),t._v(" "),a("p",[a("code",[t._v("killing_sprees: int")])]),t._v(" "),a("p",[a("code",[t._v("longest_time_spent_living: int")])]),t._v(" "),a("p",[a("code",[t._v("double_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("triple_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("quadra_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("penta_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("unreal_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("total_damage_dealt: int")])]),t._v(" "),a("p",[a("code",[t._v("magic_damage_dealt: int")])]),t._v(" "),a("p",[a("code",[t._v("physical_damage_dealt: int")])]),t._v(" "),a("p",[a("code",[t._v("true_damage_dealt: int")])]),t._v(" "),a("p",[a("code",[t._v("largest_critical_strike: int")])]),t._v(" "),a("p",[a("code",[t._v("total_damage_dealt_to_champions: int")])]),t._v(" "),a("p",[a("code",[t._v("magic_damage_dealt_to_champions: int")])]),t._v(" "),a("p",[a("code",[t._v("physical_damage_dealt_to_champions: int")])]),t._v(" "),a("p",[a("code",[t._v("true_damage_dealt_to_champions: int")])]),t._v(" "),a("p",[a("code",[t._v("total_heal: int")])]),t._v(" "),a("p",[a("code",[t._v("total_units_healed: int")])]),t._v(" "),a("p",[a("code",[t._v("damage_self_mitigated: int")])]),t._v(" "),a("p",[a("code",[t._v("damage_dealt_to_objectives: int")])]),t._v(" "),a("p",[a("code",[t._v("damage_dealt_to_turrets: int")])]),t._v(" "),a("p",[a("code",[t._v("vision_score: int")])]),t._v(" "),a("p",[a("code",[t._v("time_ccing_others: int")])]),t._v(" "),a("p",[a("code",[t._v("total_damage_taken: int")])]),t._v(" "),a("p",[a("code",[t._v("magical_damage_taken: int")])]),t._v(" "),a("p",[a("code",[t._v("physical_damage_taken: int")])]),t._v(" "),a("p",[a("code",[t._v("true_damage_taken: int")])]),t._v(" "),a("p",[a("code",[t._v("gold_earned: int")])]),t._v(" "),a("p",[a("code",[t._v("gold_spent: int")])]),t._v(" "),a("p",[a("code",[t._v("turret_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("inhibitor_kills: int")])]),t._v(" "),a("p",[a("code",[t._v("total_minions_killed: int")])]),t._v(" "),a("p",[a("code",[t._v("neutral_minions_killed: int")])]),t._v(" "),a("p",[a("code",[t._v("neutral_minions_killed_team_jungle: int")])]),t._v(" "),a("p",[a("code",[t._v("neutral_minions_killed_enemy_jungle: int")])]),t._v(" "),a("p",[a("code",[t._v("total_time_crowd_control_dealt: int")])]),t._v(" "),a("p",[a("code",[t._v("champ_level: int")])]),t._v(" "),a("p",[a("code",[t._v("vision_wards_bought_in_game: int")])]),t._v(" "),a("p",[a("code",[t._v("sight_wards_bought_in_game: int")])]),t._v(" "),a("p",[a("code",[t._v("wards_placed: int")])]),t._v(" "),a("p",[a("code",[t._v("wards_killed: int")])]),t._v(" "),a("p",[a("code",[t._v("first_blood_kill: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_blood_assist: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_tower_kill: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_tower_assist: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_inhibitor_kill: bool")])]),t._v(" "),a("p",[a("code",[t._v("first_inhibitor_assist: bool")])]),t._v(" "),a("p",[a("code",[t._v("combat_player_score: int")])]),t._v(" "),a("p",[a("code",[t._v("objective_player_score: int")])]),t._v(" "),a("p",[a("code",[t._v("total_player_score: int")])]),t._v(" "),a("p",[a("code",[t._v("total_score_rank: int")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('items -> List["Item"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_items -> List["MerakiItem"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('runes -> List["Rune"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('stat_runes -> List["Rune"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('spells -> List["Spell"]')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchparticipanttimelinedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchparticipanttimelinedata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchParticipantTimelineData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("participant_id: int")])]),t._v(" "),a("p",[a("code",[t._v("creeps_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("xp_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("gold_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("cs_diff_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("xp_diff_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("damage_taken_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("damage_taken_diff_per_min_deltas: List[float]")])]),t._v(" "),a("p",[a("code",[t._v("role: str")])]),t._v(" "),a("p",[a("code",[t._v("lane: str")])]),t._v(" "),a("p",[a("code",[t._v("frames: List[MatchFrameData]")])]),t._v(" "),a("p",[a("code",[t._v("events: List[MatchEventData]")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("INFO")]),t._v(" "),a("p",[a("code",[t._v("frames")]),t._v(" and "),a("code",[t._v("events")]),t._v(" are only available for "),a("code",[t._v("MatchTimeline")]),t._v(" Objects.")])])]),t._v(" "),a("h2",{attrs:{id:"matcheventdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcheventdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchEventData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("INFO")]),t._v(" "),a("p",[t._v("Not every field is filled, different event type yields different available fields. Getting an attr from a blank field will raise "),a("code",[t._v("AttributeError")]),t._v(".")])]),t._v(" "),a("p",[a("code",[t._v("lane_type: str")])]),t._v(" "),a("p",[a("code",[t._v("skill_slot: int")])]),t._v(" "),a("p",[a("code",[t._v("ascended_type: str")])]),t._v(" "),a("p",[a("code",[t._v("creator_id: int")])]),t._v(" "),a("p",[a("code",[t._v("after_id: int")])]),t._v(" "),a("p",[a("code",[t._v("event_type: str")])]),t._v(" "),a("p",[a("code",[t._v("type: str")])]),t._v(" "),a("p",[a("code",[t._v("level_up_type: str")])]),t._v(" "),a("p",[a("code",[t._v("ward_type: str")])]),t._v(" "),a("p",[a("code",[t._v("participant_id: int")])]),t._v(" "),a("p",[a("code",[t._v("tower_type: str")])]),t._v(" "),a("p",[a("code",[t._v("item_id: int")])]),t._v(" "),a("p",[a("code",[t._v("before_id: int")])]),t._v(" "),a("p",[a("code",[t._v("point_captured: str")])]),t._v(" "),a("p",[a("code",[t._v("monster_type: str")])]),t._v(" "),a("p",[a("code",[t._v("monster_sub_type: str")])]),t._v(" "),a("p",[a("code",[t._v("team_id: int")])]),t._v(" "),a("p",[a("code",[t._v("position: MatchPositionData")])]),t._v(" "),a("p",[a("code",[t._v("killer_id: int")])]),t._v(" "),a("p",[a("code",[t._v("timestamp: int")])]),t._v(" "),a("p",[a("code",[t._v("time: timedelta")])]),t._v(" "),a("p",[a("code",[t._v("assisting_participant_ids: List[int]")])]),t._v(" "),a("p",[a("code",[t._v("building_type: str")])]),t._v(" "),a("p",[a("code",[t._v("victim_id: int")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('after_item -> "Item"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('item -> "Item"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('before_item -> "Item"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_after_item -> "MerakiItem"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_item -> "MerakiItem"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_before_item -> "MerakiItem"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchframedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchframedata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchFrameData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("participant_id: int")])]),t._v(" "),a("p",[a("code",[t._v("minions_killed: int")])]),t._v(" "),a("p",[a("code",[t._v("team_score: int")])]),t._v(" "),a("p",[a("code",[t._v("dominion_score: int")])]),t._v(" "),a("p",[a("code",[t._v("total_gold: int")])]),t._v(" "),a("p",[a("code",[t._v("level: int")])]),t._v(" "),a("p",[a("code",[t._v("xp: int")])]),t._v(" "),a("p",[a("code",[t._v("current_gold: int")])]),t._v(" "),a("p",[a("code",[t._v("position: MatchPositionData")])]),t._v(" "),a("p",[a("code",[t._v("jungle_minions_killed: int")])])]),t._v(" "),a("h2",{attrs:{id:"matchbandata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchbandata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchBanData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("champion_id: int")])]),t._v(" "),a("p",[a("code",[t._v("pick_turn: int")])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v('champion -> "Champion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1),t._v(" "),a("p",[a("code",[t._v('meraki_champion -> "MerakiChampion"')]),t._v(" "),a("Badge",{attrs:{text:"bridge",type:"error",vertical:"middle"}})],1)]),t._v(" "),a("h2",{attrs:{id:"matchpositiondata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchpositiondata"}},[t._v("#")]),t._v(" "),a("code",[t._v("MatchPositionData")]),t._v(" "),a("Badge",{attrs:{text:"Pyot Static",vertical:"middle"}})],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("x: int")])]),t._v(" "),a("p",[a("code",[t._v("y: int")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);